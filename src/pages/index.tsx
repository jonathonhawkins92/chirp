import { SignInButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

import type { RouterOutputs } from "~/utils/api";
import { api } from "~/utils/api";
import { LoadingPage } from "~/components/loading";

dayjs.extend(relativeTime);

const Avatar = ({
    src,
    username,
}: {
    src: string;
    username?: null | string;
}) => {
    return (
        <Image
            src={src}
            alt={username ? `@${username}'s profile image` : "Profile image"}
            className="h-14 w-14 rounded-full"
            width={56}
            height={56}
        />
    );
};

const CreatePostWizard = () => {
    const { user, isSignedIn } = useUser();

    if (!isSignedIn) return null;

    return (
        <div className="flex w-full gap-3">
            <Avatar src={user.profileImageUrl} username={user.username} />
            <input
                className="grow bg-transparent outline-none"
                placeholder="Emojis"
                type="text"
                name=""
                id=""
            />
        </div>
    );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = ({ post, author }: PostWithUser) => {
    return (
        <div className="flex w-full gap-3 border-b border-slate-400 p-4">
            <Avatar src={author.profileImageUrl} />
            <div className="flex flex-col">
                <div className="flex gap-1 text-slate-300">
                    <span>{`@${author.username}`}</span>
                    <span>Â·</span>
                    <span className="font-thin">
                        {dayjs(post.createdAt).fromNow()}
                    </span>
                </div>
                <span className="text-2xl">{post.content}</span>
            </div>
        </div>
    );
};

const Feed = () => {
    const { data: posts, isLoading, isError } = api.posts.getAll.useQuery();

    if (isLoading) return <LoadingPage />;

    if (isError) return <div>Woops!</div>;

    return (
        <ul>
            {posts.map(({ post, author }) => (
                <li key={post.id}>
                    <PostView post={post} author={author} />
                </li>
            ))}
        </ul>
    );
};

const Home: NextPage = () => {
    api.posts.getAll.useQuery();

    const { isSignedIn, isLoaded: isUserLoaded } = useUser();

    if (!isUserLoaded) return <LoadingPage />;

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="flex h-screen justify-center">
                <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
                    <nav className="flex border-b border-slate-400 p-4">
                        <div className="flex justify-center">
                            {!isSignedIn && <SignInButton />}
                        </div>
                        {!!isSignedIn && <CreatePostWizard />}
                    </nav>
                    <Feed />
                </div>
            </main>
        </>
    );
};

export default Home;

